#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char caesar_cipher(char in, int shift){

    char out = in;

    //uppercase characters first:
    if (65 <= in && in <= 90){
	//find shifted character
	out = in + shift;
	//if new character is beyond Z, send back to the beginning of the alphabet.
	if (out > 90){
	    out = out - 26;
	}
    }

    //lowercase characters now:
    if (97 <= in && in <= 122){
	//find shifted character
	out = in + shift;
	//if new character is beyond z, send back to the beginning of the alphabet.
	if (out > 122){
	    out = out - 26;
	}
    }

    return out;
}


int main(int argc, char* argv[]){
    if (argc != 2){
	printf("Incorrect number of arguments at the commmand line.\n");
	printf("Use the format \"./crypt 2\".\n");
	return 1;
    }

    int shift = atoi(argv[1]);

    char file_line[100];
    FILE* in_file;
    FILE* out_file;

    in_file = fopen("test.txt","r");
    out_file = fopen("output.txt", "w");

    if (in_file == NULL || out_file == NULL){
	printf("File open error.\n");
	return 1;
    }

    int i;
    while(!(fgets(file_line, 100, in_file) == NULL)){
	for(i = 0; i < strlen(file_line); i++){
	    file_line[i] = caesar_cipher(file_line[i], shift);
	}
	fputs(file_line, out_file);	
    }

    fclose(in_file);
    fclose(out_file);

    return 0;
}
